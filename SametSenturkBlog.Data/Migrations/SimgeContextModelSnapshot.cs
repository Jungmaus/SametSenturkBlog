// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SametSenturkBlog.Data.Models.ORM.Context;

namespace SametSenturkBlog.Data.Migrations
{
    [DbContext(typeof(SimgeContext))]
    partial class SimgeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Article", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<int>("CategoryID");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<int>("DontLikeCount");

                    b.Property<int?>("LanguageType")
                        .IsRequired();

                    b.Property<int>("LikeCount");

                    b.Property<int>("ReadCount");

                    b.Property<string>("SeoSubject")
                        .IsRequired()
                        .HasMaxLength(55);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UserID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("UserID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<int?>("LanguageType")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("SeoName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("IpAdress")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("LanguageType")
                        .IsRequired();

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(350);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("SubjectID");

                    b.Property<int>("UserID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("DownloadCount");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int?>("LanguageType")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.Property<string>("Path")
                        .IsRequired();

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<int?>("ArticleID");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<int?>("LanguageType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Path")
                        .IsRequired();

                    b.Property<int?>("Type");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.HasIndex("ArticleID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(35);

                    b.Property<string>("IpAdress")
                        .HasMaxLength(20);

                    b.Property<int?>("LanguageType");

                    b.Property<string>("Subject")
                        .HasMaxLength(15);

                    b.Property<int?>("Type");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<int>("ArticleID");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<int?>("LanguageType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("SeoName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.HasIndex("ArticleID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("IpAdress")
                        .HasMaxLength(20);

                    b.Property<int?>("LanguageType");

                    b.Property<DateTime?>("LastLogin");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Role");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<bool>("isActive");

                    b.Property<bool>("isDeleted");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Article", b =>
                {
                    b.HasOne("SametSenturkBlog.Data.Models.ORM.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SametSenturkBlog.Data.Models.ORM.Entities.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Contact", b =>
                {
                    b.HasOne("SametSenturkBlog.Data.Models.ORM.Entities.User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Image", b =>
                {
                    b.HasOne("SametSenturkBlog.Data.Models.ORM.Entities.Article", "Article")
                        .WithMany("Images")
                        .HasForeignKey("ArticleID");
                });

            modelBuilder.Entity("SametSenturkBlog.Data.Models.ORM.Entities.Tag", b =>
                {
                    b.HasOne("SametSenturkBlog.Data.Models.ORM.Entities.Article", "Article")
                        .WithMany("Tags")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
